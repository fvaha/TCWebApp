name: Build, Push and Deploy

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: vahanp/tcwebapp
  LATEST_TAG: latest
  COMMIT_SHA_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Write .env file from secret
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
          if [ ! -s .env ]; then
            echo "Error: .env file is empty"
            exit 1
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.LATEST_TAG }}
            ${{ env.IMAGE_NAME }}:${{ env.COMMIT_SHA_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production
          platforms: linux/amd64

      - name: Verify Docker image
        run: |
          docker pull ${{ env.IMAGE_NAME }}:${{ env.COMMIT_SHA_TAG }}
          docker inspect ${{ env.IMAGE_NAME }}:${{ env.COMMIT_SHA_TAG }}
          docker run --rm ${{ env.IMAGE_NAME }}:${{ env.COMMIT_SHA_TAG }} ls -la /app/frontend
          docker run --rm ${{ env.IMAGE_NAME }}:${{ env.COMMIT_SHA_TAG }} ls -la /app/backend

      - name: Deploy on remote server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 7771
          script: |
            set -ex
            echo "=== Starting deployment ==="
            
            # Ensure directory exists
            mkdir -p /home/${{ secrets.SERVER_USER }}/tcwebapp
            
            # Verify .env exists
            if [ ! -f /home/${{ secrets.SERVER_USER }}/tcwebapp/.env ]; then
              echo "Error: .env file missing on server"
              exit 1
            fi
            
            # Pull latest image
            docker pull ${{ env.IMAGE_NAME }}:${{ env.COMMIT_SHA_TAG }}
            
            # Stop and remove existing container
            docker rm -f tcwebapp || true
            
            # Start new container
            docker run -d \
              --name tcwebapp \
              -p 192.168.1.5:5173:5173 \
              -p 192.168.1.5:5174:5174 \
              -v /home/${{ secrets.SERVER_USER }}/tcwebapp/.env:/app/.env \
              --restart unless-stopped \
              ${{ env.IMAGE_NAME }}:${{ env.COMMIT_SHA_TAG }}
            
            echo "=== Deployment successful ==="
            echo "Container status:"
            docker ps -a | grep tcwebapp
            
            # Wait 5 seconds for services to start
            sleep 5
            
            echo "Service verification:"
            echo "- Frontend status: $(curl -s -o /dev/null -w "%{http_code}" http://192.168.1.5:5173)"
            echo "- Backend status: $(curl -s -o /dev/null -w "%{http_code}" http://192.168.1.5:5174/api/contact -X POST)"
            
            echo "Recent logs:"
            docker logs tcwebapp --tail 20
